install.packages("RGtk2")
warnings()
library(rattle)
library(RGtk2)
library(rattle)
library(swirl)
library()
update.packages()
install.packages("rattle")
library(rattle)
rattle()
library(rattle)
rattle()
library(rattle)
rattle()
rattle()
rattle()
rattle()
library(rattle)
rattle()
library(rattle)
rattle()
library(rattle)
rattle()
library(rattle)
rattle()
names(mylist) <- c("first", "second", "third")
# Split by space, then unlist
words <- unlist(strsplit(tolower(mystr), " ", fixed = TRUE))
mylist <- list("Sam", c(13, -0.1, 1.3), c(TRUE, FALSE))
print(mylist)
str(mylist)
length(mylist)
print(mylist[1])
print(class(mylist[1]))
print(mylist[c(1, 3)])
print(class(mylist[c(1, 3)]))
print(mylist[[2]])
print(class(mylist[[2]]))
# This gets the third piece of mylist[[2]]
print(mylist[[c(2, 3)]])
# And this gets the second piece of mylist[[3]]
print(mylist[[c(3, 2)]])
# This will produce an error in this case. Why?
# print(mylist[[1:2]])
names(mylist) <- c("first", "second", "third")
print(mylist)
mylist <- list(first = "Sam", second = c(13, -0.1, 1.3), third = c(TRUE, FALSE))
print(names(mylist))
identical(mylist$second, mylist[[2]])
identical(mylist[["second"]], mylist[[2]])
mylist$fourth <- c("Iowa", "Georgia")
mylist[[5]] <- c(-1, 0, 1, 2)
length(mylist)
mylist$fourth <- NULL
print(mylist)
print(unlist(mylist))
df <- readr::read_csv("des_moines_housing_with_latlon.csv")
df$city <- factor(df$city)
mylist <- split(df, df$city)
print(class(mylist))
print(names(mylist))
length(mylist)
print(class(mylist$Altoona))
print(names(mylist$Altoona))
nrow(mylist$Altoona)
# Get list of HTML tables from URL
suppressPackageStartupMessages(library(rvest))
url <- "https://en.wikipedia.org/wiki/List_of_national_capitals_in_alphabetical_order"
tb <- html_table(read_html(url), fill = TRUE)
print(class(tb))
print(class(tb[[2]]))
mystr <- c("The quick brown fox jumps over the lazy dog. All letters.",
"A dog, a panic in a pagoda.")
print(mystr)
# Search for "dog", which appears in position 1 and 2 of mystr
grep("dog", mystr, fixed = TRUE)
# Search for "pagoda", which appears in position 2 only
grep("pagoda", mystr, fixed = TRUE)
# Search for "all", which appears nowhere
grep("all", mystr, fixed = TRUE)
# This is a case-insensitive search with a match in the first position
grep("all", tolower(mystr), fixed = TRUE)
grepl(pattern = "dog", x = mystr, fixed = TRUE) # Search for "dog"
grepl("pagoda", mystr, fixed = TRUE)
grepl("all", mystr, fixed = TRUE)
grepl("all", tolower(mystr), fixed = TRUE)
nchar(mystr)
# Extract positions 10 to 19
print(substr(mystr, 10, 19))
# Extract positions 25 to 35. Note that we get just a few characters if
# length is less than 35
print(substr(mystr, 25, 35))
# Split by period
mylist <- strsplit(mystr, ".", fixed = TRUE)
print(mylist)
# Split by space, then unlist
words <- unlist(strsplit(tolower(mystr), " ", fixed = TRUE))
print(words)
print(paste(words[1], words[2], sep = " "))
print(paste(words[1], words[2], sep = ""))
print(paste(words[1], words[2], sep = "."))
print(paste(words[1], "and", words[2], "but", words[3], sep = " "))
print(sprintf("%s %s", words[1], words[2]))
print(sprintf("%s%s", words[1], words[2]))
print(sprintf("%s.%s", words[1], words[2]))
print(sprintf("%s and %s but %s", words[1], words[2], words[3]))
setwd("C:/Users/zmcda/OneDrive - University of Iowa/University of Iowa/Thesis/NFL_officials_analysis")
load("C:/Users/zmcda/OneDrive - University of Iowa/University of Iowa/Thesis/NFL_officials_analysis/Official_Games_Merged.rda")
load("C:/Users/zmcda/OneDrive - University of Iowa/University of Iowa/Thesis/NFL_officials_analysis/Official_Stats_Merged.rda")
###############################################################################
# Combine game_info_df and games_df
library(dplyr)
combined_game_info_df <- merge(game_info_df, games_df, by = "gameurl")
load("C:/Users/zmcda/OneDrive - University of Iowa/University of Iowa/Thesis/NFL_officials_analysis/Official_Games_Merged.rda")
complete_official_data <- merge(combined_game_info_df, officials_stats, by = "urls")
View(complete_official_data)
combined_game_info_df$year <- format(combined_game_info_df$date, '%Y')
View(combined_game_info_df)
game_ref_df<-merge(officials_stats, combined_game_info_df, by.x=c("urls", "years"), by.y=c("urls", "year"))
View(game_ref_df)
View(game_ref_df)
combined_game_info_df$year <- format(combined_game_info_df$date, '%Y')
game_ref_df<-merge(officials_stats, combined_game_info_df, by.x=c("urls", "years"), by.y=c("urls", "year"))
save(game_ref_df, file = "game_ref_df.rda")
##Summary Table
game_ref_df <- group_by(game_ref_df, gameurl)
game_ref_df$start_year <- as.integer(game_ref_df$start_year)
#game_ref_df <- ungroup(game_ref_df)
summ <- summarize(game_ref_df, total_experience = sum(years-start_year))
View(summ)
game_df <- dplyr::select(combined_game_info_df, -urls, -position)
game_df <- dplyr::distinct(game_df)
game_df <- merge(game_df, summ, by = "gameurl")
View(game_df)
save(game_df, file = "game_with_total_experience.rda")
rm(list = ls())
load("Official_Games_Merged.rda")
load("Official_Stats_Merged.rda")
load("C:/Users/zmcda/OneDrive - University of Iowa/University of Iowa/Thesis/NFL_officials_analysis/game_ref_df.rda")
load("game_with_total_experience.rda")
rm(list = ls())
load("Official_Games_Merged.rda")
load("Official_Stats_Merged.rda")
load("game_with_total_experience.rda")
View(game_df)
View(game_df)
